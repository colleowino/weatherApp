plugins {
    id("com.android.application")
}
android {
    signingConfigs {
    }
    defaultConfig {
        applicationId "com.cliff.weatherapp"
        minSdkVersion 21
        targetSdkVersion 36
        versionCode 6
        versionName "1.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        compileSdkVersion 36
    }
    buildFeatures {
        buildConfig = true // Enable BuildConfig generation
    }
    buildTypes {
        debug {
            buildConfigField "String", "API_KEY", getSecret("OPEN_WEATHER_API_KEY")
        }
        release {
            minifyEnabled false
            buildConfigField "String", "API_KEY", getSecret("OPEN_WEATHER_API_KEY")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.cliff.weatherapp'
}

// Function to read secrets from the properties file
def getSecret(String key) {
    def secretsFile = rootProject.file("local.properties")
    if (secretsFile.exists()) {
        def properties = new Properties()
        properties.load(new FileInputStream(secretsFile))
        return properties.getProperty(key, "") // Return empty string if key not found
    }
    return "" // Return empty string if file doesn't exist
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'androidx.test:core:1.7.0'
    androidTestImplementation 'androidx.test:runner:1.7.0'
    androidTestImplementation 'androidx.test:rules:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'com.google.android.material:material:1.13.0'
    implementation 'com.android.volley:volley:1.2.1'
    testImplementation 'junit:junit:4.13.2'
}
